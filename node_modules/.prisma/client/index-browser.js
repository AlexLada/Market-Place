
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.9.0
 * Query Engine version: ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5
 */
Prisma.prismaVersion = {
  client: "4.9.0",
  engine: "ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.CategoryOrderByRelevanceFieldEnum = makeEnum({
  name: 'name',
  keywords: 'keywords'
});

exports.Prisma.CategoryScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  keywords: 'keywords'
});

exports.Prisma.ClientOrderByRelevanceFieldEnum = makeEnum({
  name: 'name',
  surname: 'surname',
  email: 'email',
  phone: 'phone',
  password: 'password',
  promocodes: 'promocodes'
});

exports.Prisma.ClientScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  surname: 'surname',
  email: 'email',
  phone: 'phone',
  password: 'password',
  emailConfirmed: 'emailConfirmed',
  createdAt: 'createdAt',
  promocodes: 'promocodes',
  wishlist: 'wishlist'
});

exports.Prisma.DeliveryAddressOrderByRelevanceFieldEnum = makeEnum({
  name: 'name',
  address: 'address'
});

exports.Prisma.DeliveryAddressScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  address: 'address'
});

exports.Prisma.ModerationOrderByRelevanceFieldEnum = makeEnum({
  login: 'login',
  password: 'password'
});

exports.Prisma.ModerationScalarFieldEnum = makeEnum({
  id: 'id',
  login: 'login',
  password: 'password'
});

exports.Prisma.OrderOrderByRelevanceFieldEnum = makeEnum({
  adress: 'adress'
});

exports.Prisma.OrderScalarFieldEnum = makeEnum({
  id: 'id',
  clientId: 'clientId',
  dateCreated: 'dateCreated',
  confirmSuccess: 'confirmSuccess',
  adress: 'adress'
});

exports.Prisma.ProductImageOrderByRelevanceFieldEnum = makeEnum({
  path: 'path',
  alt: 'alt'
});

exports.Prisma.ProductImageScalarFieldEnum = makeEnum({
  id: 'id',
  path: 'path',
  alt: 'alt',
  productId: 'productId'
});

exports.Prisma.ProductOnOrderScalarFieldEnum = makeEnum({
  id: 'id',
  productId: 'productId',
  orderId: 'orderId',
  quantity: 'quantity',
  statusCode: 'statusCode'
});

exports.Prisma.ProductOrderByRelevanceFieldEnum = makeEnum({
  title: 'title',
  brand: 'brand',
  country: 'country',
  expires: 'expires',
  wayToUse: 'wayToUse',
  contain: 'contain',
  description: 'description',
  storage: 'storage',
  note: 'note'
});

exports.Prisma.ProductScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  amount: 'amount',
  price: 'price',
  brand: 'brand',
  country: 'country',
  expires: 'expires',
  wayToUse: 'wayToUse',
  contain: 'contain',
  description: 'description',
  storage: 'storage',
  note: 'note',
  visible: 'visible',
  retailerId: 'retailerId',
  clicks: 'clicks',
  createdAt: 'createdAt'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.ReportOrderByRelevanceFieldEnum = makeEnum({
  title: 'title',
  text: 'text'
});

exports.Prisma.ReportScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  date: 'date',
  text: 'text'
});

exports.Prisma.RetailerOrderByRelevanceFieldEnum = makeEnum({
  email: 'email',
  photo: 'photo',
  name: 'name',
  surname: 'surname',
  patrinymic: 'patrinymic',
  phone: 'phone',
  companyName: 'companyName',
  city: 'city',
  password: 'password'
});

exports.Prisma.RetailerScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email',
  emailConfirmed: 'emailConfirmed',
  photo: 'photo',
  name: 'name',
  surname: 'surname',
  patrinymic: 'patrinymic',
  phone: 'phone',
  companyName: 'companyName',
  city: 'city',
  confirmed: 'confirmed',
  password: 'password'
});

exports.Prisma.ReviewOrderByRelevanceFieldEnum = makeEnum({
  title: 'title',
  text: 'text',
  retailerAnswer: 'retailerAnswer'
});

exports.Prisma.ReviewScalarFieldEnum = makeEnum({
  id: 'id',
  productId: 'productId',
  clientId: 'clientId',
  createdAt: 'createdAt',
  lastEditTime: 'lastEditTime',
  title: 'title',
  text: 'text',
  rating: 'rating',
  retailerAnswer: 'retailerAnswer',
  answerCreatedAt: 'answerCreatedAt'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});


exports.Prisma.ModelName = makeEnum({
  Moderation: 'Moderation',
  Report: 'Report',
  DeliveryAddress: 'DeliveryAddress',
  Client: 'Client',
  Order: 'Order',
  ProductOnOrder: 'ProductOnOrder',
  Review: 'Review',
  Product: 'Product',
  ProductImage: 'ProductImage',
  Category: 'Category',
  Retailer: 'Retailer'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
